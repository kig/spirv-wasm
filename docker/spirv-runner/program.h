//
// targets/kernel/program.h
// (Header automatically generated by the ispc compiler.)
// DO NOT EDIT THIS FILE.
//

#ifndef ISPC_TARGETS_KERNEL_PROGRAM_H
#define ISPC_TARGETS_KERNEL_PROGRAM_H

#include <stdint.h>



#ifdef __cplusplus
namespace ispc { /* namespace */
#endif // __cplusplus

#ifndef __ISPC_ALIGN__
#if defined(__clang__) || !defined(_MSC_VER)
// Clang, GCC, ICC
#define __ISPC_ALIGN__(s) __attribute__((aligned(s)))
#define __ISPC_ALIGNED_STRUCT__(s) struct __ISPC_ALIGN__(s)
#else
// Visual Studio
#define __ISPC_ALIGN__(s) __declspec(align(s))
#define __ISPC_ALIGNED_STRUCT__(s) __ISPC_ALIGN__(s) struct
#endif
#endif

#ifndef __ISPC_STRUCT_inputs__
#define __ISPC_STRUCT_inputs__
struct inputs {
    float inputData[1];
};
#endif

#ifndef __ISPC_STRUCT_outputs__
#define __ISPC_STRUCT_outputs__
struct outputs {
    float outputData[1];
};
#endif


///////////////////////////////////////////////////////////////////////////
// Functions exported from ispc code
///////////////////////////////////////////////////////////////////////////
#if defined(__cplusplus) && (! defined(__ISPC_NO_EXTERN_C) || !__ISPC_NO_EXTERN_C )
extern "C" {
#endif // __cplusplus
    extern void program_dispatch_all(int32_t * work_groups, struct inputs &_20, struct outputs &_164);
    extern void program_dispatch_all_tiled(int32_t * work_groups, struct inputs &_20, struct outputs &_164);
    extern void program_dispatch_single(int32_t * work_group_ID, int32_t * work_groups, struct inputs &_20, struct outputs &_164);
    extern void program_dispatch_single_tiled(int32_t * work_group_ID, int32_t * work_groups, struct inputs &_20, struct outputs &_164);
    extern void program_get_workgroup_size(int32_t &wg_x, int32_t &wg_y, int32_t &wg_z);
    extern void runner_main(int32_t * work_groups, struct inputs &input, struct outputs &output);
#if defined(__cplusplus) && (! defined(__ISPC_NO_EXTERN_C) || !__ISPC_NO_EXTERN_C )
} /* end extern C */
#endif // __cplusplus


#ifdef __cplusplus
} /* namespace */
#endif // __cplusplus

#endif // ISPC_TARGETS_KERNEL_PROGRAM_H
